{"version":3,"sources":["components/card.jsx","layouts/main.jsx","components/textField.jsx","layouts/edit.jsx","utils/validator.js","App.js","reportWebVitals.js","index.js"],"names":["Card","student","JSON","parse","localStorage","getItem","className","name","lastname","year","age","Date","getFullYear","some","el","renderPhrase","Number","href","link","to","Main","TextField","label","type","value","onChange","error","useState","showPassword","setShowPassword","htmlFor","id","onClick","prevState","defaultProps","Edit","history","useHistory","data","setData","errors","setErrors","handleChange","target","validatorConfig","isRequired","message","isPresent","isLink","useEffect","validate","config","validateMethod","statusValidate","trim","test","fieldName","validator","Object","keys","length","isValid","onSubmit","e","preventDefault","removeItem","setItem","stringify","push","disabled","App","path","exact","component","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.696b54d5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = () => {\r\n  const student = JSON.parse(localStorage.getItem(\"student\"));\r\n\r\n  const renderPhrase = (year) => {\r\n    const age = new Date().getFullYear() - year;\r\n    if (age % 10 === 1) {\r\n      return ` (${age} год)`;\r\n    } else {\r\n      if ([2, 3, 4].some((el) => age % 10 === el)) {\r\n        return ` (${age} года)`;\r\n      } else {\r\n        return ` (${age} лет)`;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Карточка студента</h5>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">Имя: {student.name}</li>\r\n          <li className=\"list-group-item\">Фамилия: {student.lastname}</li>\r\n          <li className=\"list-group-item\">\r\n            Год рождения: {student.year}\r\n            <span>{renderPhrase(Number(student.year))}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Портфолио:<a href=\"{student.link}\"> {student.link}</a>\r\n          </li>\r\n        </ul>\r\n        <Link to=\"/edit\" className=\"btn btn-primary\">\r\n          Редактировать\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../components/card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap\";\r\n\r\nconst Main = () => {\r\n  const student = JSON.parse(localStorage.getItem(\"student\"));\r\n  return (\r\n    <>\r\n      {student && <Card />}\r\n      {!student && (\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Карточка студента</h5>\r\n            <p>Нет данных</p>\r\n            <Link to=\"/edit\" className=\"btn btn-primary m-2\">\r\n              Добавить\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const getInputClasses = () => {\n    return \"form-control \" + (error ? \"is-invalid\" : \"\");\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"input-group has-validation\">\n        <input\n          type={showPassword ? \"text\" : type}\n          id={name}\n          value={value}\n          name={name}\n          onChange={onChange}\n          className={getInputClasses()}\n        />\n        {type === \"password\" && (\n          <button\n            onClick={toggleShowPassword}\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n          >\n            <i className={\"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")}></i>\n          </button>\n        )}\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n};\nTextField.defaultProps = {\n  type: \"text\",\n};\nexport default TextField;\nTextField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string,\n};\n","import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"../components/textField\";\r\nimport { validator } from \"../utils/validator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Edit = () => {\r\n  let history = useHistory();\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    lastname: \"\",\r\n    year: \"\",\r\n    link: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = ({ target }) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n  };\r\n\r\n  const validatorConfig = {\r\n    name: {\r\n      isRequired: { message: \"Поле обязательно для заполнения\" },\r\n    },\r\n    lastname: {\r\n      isRequired: { message: \"Пoле обязательно для заполнения\" },\r\n    },\r\n    year: {\r\n      isRequired: { message: \"Пoле обязательно для заполнения\" },\r\n      isPresent: { message: \"Поле 'Год рождения' не корректно\" },\r\n    },\r\n    link: {\r\n      isRequired: { message: \"Пoле обязательно для заполнения\" },\r\n      isLink: { message: \"Пoле 'Портфолио' должно быть ссылкой\" },\r\n    },\r\n  };\r\n  // eslint-disable-next-line\r\n  useEffect(() => validate(), [data]);\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    localStorage.removeItem(\"student\");\r\n    localStorage.setItem(\"student\", JSON.stringify(data));\r\n    history.push(\"/card\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n          <h3 className=\"mb-4\">{data ? \"Редактировать\" : \"Создать\"}</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"Имя\"\r\n              name=\"name\"\r\n              value={data.name}\r\n              onChange={handleChange}\r\n              error={errors.name}\r\n            />\r\n            <TextField\r\n              label=\"Фамилия\"\r\n              type=\"text\"\r\n              name=\"lastname\"\r\n              value={data.lastname}\r\n              onChange={handleChange}\r\n              error={errors.lastname}\r\n            />\r\n            <TextField\r\n              label=\"Год рождения\"\r\n              name=\"year\"\r\n              value={data.year}\r\n              onChange={handleChange}\r\n              error={errors.year}\r\n            />\r\n            <TextField\r\n              label=\"Ссылка на портфолио\"\r\n              name=\"link\"\r\n              value={data.link}\r\n              onChange={handleChange}\r\n              error={errors.link}\r\n            />\r\n\r\n            {!localStorage.getItem(\"student\") ? (\r\n              <button\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n              >\r\n                Создать\r\n              </button>\r\n            ) : (\r\n              <div className=\"gap-2 d-md-block\">\r\n                <Link to=\"/\" className=\"btn btn-primary m-2 \">\r\n                  Назад\r\n                </Link>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={!isValid}\r\n                  className=\"btn btn-primary m-2 \"\r\n                >\r\n                  Обновить\r\n                </button>\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","export function validator(data, config) {\n  const errors = {};\n  function validate(validateMethod, data, config) {\n    let statusValidate;\n    switch (validateMethod) {\n      case \"isRequired\":\n        statusValidate = data.trim() === \"\";\n        break;\n      case \"isPresent\":\n        statusValidate =\n          !/\\d{4}/g.test(data.trim()) ||\n          Number(data) > new Date().getFullYear();\n        break;\n      case \"isLink\":\n        statusValidate =\n          !/^((ftp|http|https):\\/\\/)?(www\\.)?([A-Za-zА-Яа-я0-9]{1}[A-Za-zА-Яа-я0-9\\-]*\\.?)*\\.{1}[A-Za-zА-Яа-я0-9-]{2,8}(\\/([\\w#!:.?+=&%@!\\-\\/])*)?/.test(\n            data.trim()\n          );\n        break;\n\n      default:\n        break;\n    }\n    if (statusValidate) return config.message;\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      );\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error;\n      }\n    }\n  }\n  return errors;\n}\n","import React from \"react\";\nimport Main from \"./layouts/main\";\nimport Edit from \"./layouts/edit\";\nimport Card from \"./components/card\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/edit\" component={Edit} />\n        <Route path=\"/card\" component={Card} />\n        <Redirect from=\"/main\" to=\"/\" />\n      </Switch>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}